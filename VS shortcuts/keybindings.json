// Place your key bindings in this file to override the defaults
[
  { "key": "ctrl+s", "command": "workbench.action.files.saveAll" },
  { "key": "ctrl+1", "command": "workbench.action.tasks.runTask", "args": "SPA-Build" },

  {
    "key": "ctrl+shift+s",
    "command": "-surround.with",
    "when": "editorHasSelection"
  },

  // Toggle between terminal and editor focus
  { "key": "ctrl+`", "command": "workbench.action.terminal.focus" },
  { "key": "ctrl+`", "command": "workbench.action.focusActiveEditorGroup", "when": "terminalFocus" },

  // Quit VS Code
  { "key": "ctrl+q", "command": "workbench.action.quit" },

  {
    "key": "alt+e",
    "command": "surround.with.element"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },

  { "key": "alt+=",
    "command": "extension.autoalign",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+shift+=",
    "command": "wwm.aligncode",
    "when": "editorTextFocus && !editorReadonly"
  },

  {
    "key": "ctrl+shift+/",
    "command": "editor.action.marker.next",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+alt+/",
    "command": "editor.action.marker.prev",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+f8",
    "command": "-editor.action.marker.prev",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+/",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "ctrl+1",
    "command": "-workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "ctrl+alt+]",
    "command": "editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+0",
    "command": "-editor.foldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+k ctrl+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+alt+[",
    "command": "editor.unfoldAll",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-markdown.extension.editing.toggleHeadingDown",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+[",
    "command": "editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-markdown.extension.editing.toggleHeadingUp",
    "when": "editorTextFocus && !editorReadonly && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+shift+]",
    "command": "-editor.unfold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+]",
    "command": "editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+shift+[",
    "command": "-editor.fold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+alt+i",
    "command": "editor.action.toggleRenderWhitespace"
  },
  {
    "key": "alt+f",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus"
  },
  {
    "key": "alt+d",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus"
  },
  {
    "key": "alt+c",
    "command": "console.log.wrap.down.prefix",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+w w",
    "command": "-console.log.wrap",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+w w",
    "command": "-console.log.wrap.string",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+w down",
    "command": "-console.log.wrap.down",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+w down",
    "command": "-console.log.wrap.string.down",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+w up",
    "command": "-console.log.wrap.up",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+w up",
    "command": "-console.log.wrap.string.up",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+w ctrl+alt+w",
    "command": "-console.log.wrap.prefix",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+w ctrl+alt+down",
    "command": "-console.log.wrap.down.prefix",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+w ctrl+alt+up",
    "command": "-console.log.wrap.up.prefix",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+]",
    "command": "-editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+]",
    "command": "-markdown.extension.onIndentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "ctrl+[",
    "command": "-editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+[",
    "command": "-markdown.extension.onOutdentLines",
    "when": "editorTextFocus && !suggestWidgetVisible && editorLangId == 'markdown'"
  },
  {
    "key": "alt+.",
    "command": "-auto-close-tag.closeTag"
  },
  {
    "key": "alt+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+.",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+l",
    "command": "-toggleSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+l alt+o",
    "command": "-extension.liveServer.goOnline",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+l alt+c",
    "command": "-extension.liveServer.goOffline",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenView"
  },
  {
    "key": "ctrl+q",
    "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
    "when": "inQuickOpen && inViewsPicker"
  },
  {
    "key": "alt+s",
    "command": "-todo.toggleStart",
    "when": "editorTextFocus && editorLangId == 'todo'"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.files.saveAs"
  },
  {
    "key": "ctrl+shift+s",
    "command": "-workbench.action.files.saveAs"
  },
  {
    "key": "alt+=",
    "command": "-increaseSearchEditorContextLines",
    "when": "inSearchEditor"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchEditorCaseSensitive",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+c",
    "command": "-todo.toggleCancelled",
    "when": "editorTextFocus && editorLangId == 'todo'"
  },
  {
    "key": "alt+c",
    "command": "-toggleFindCaseSensitive",
    "when": "editorFocus"
  },
  {
    "key": "alt+c",
    "command": "-toggleSearchCaseSensitive",
    "when": "searchViewletFocus"
  },
  {
    "key": "alt+f",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+d",
    "command": "-editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+f1",
    "command": "-editor.action.showAccessibilityHelp"
  },
  {
    "key": "alt+f1",
    "command": "ysemeniuk.emmetLive",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "-ysemeniuk.emmetLive",
    "when": "editorTextFocus"
  },
  {
    "key": "shift+alt+c",
    "command": "turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-turboConsoleLog.displayLogMessage"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "shift+alt+x",
    "command": "turboConsoleLog.commentAllLogMessages"
  },
  {
    "key": "shift+alt+c",
    "command": "-turboConsoleLog.commentAllLogMessages"
  },
  {
    "key": "shift+alt+c",
    "command": "-copyFilePath",
    "when": "!editorFocus"
  },
  {
    "key": "shift+alt+c",
    "command": "-search.action.copyPath",
    "when": "fileMatchOrFolderMatchWithResourceFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+b",
    "command": "-extension.openInDefaultBrowser"
  },
  {
    "key": "shift+alt+b",
    "command": "-extension.openInSpecifyBrowser"
  },
  {
    "key": "ctrl+b",
    "command": "editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+\\",
    "command": "-editor.action.jumpToBracket",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeActiveEditor"
  },
  {
    "key": "ctrl+w",
    "command": "-workbench.action.closeGroup",
    "when": "activeEditorGroupEmpty && multipleEditorGroups"
  },
  {
    "key": "alt+w",
    "command": "-toggleFindWholeWord",
    "when": "editorFocus"
  },
  {
    "key": "alt+w",
    "command": "-toggleSearchWholeWord",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+alt+s",
    "command": "extension.liveServer.goOffline"
  },
  {
    "key": "alt+b",
    "command": "-gitlens.toggleFileBlame",
    "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
  },
  {
    "key": "shift+alt+b",
    "command": "-gitlens.toggleCodeLens",
    "when": "editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'"
  },
  {
    "key": "alt+z",
    "command": "extension.liveServer.goOnline"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "code-runner.run"
  },
  {
    "key": "shift+alt+b",
    "command": "livePreview.start.preview.atFile"
  },
  {
    "key": "alt+c",
    "command": "-workbench.action.terminal.toggleFindCaseSensitive",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchEditorRegex",
    "when": "inSearchEditor && searchInputBoxFocus"
  },
  {
    "key": "alt+r",
    "command": "-workbench.action.terminal.toggleFindRegex",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+r",
    "command": "-toggleSearchRegex",
    "when": "searchViewletFocus"
  },
  {
    "key": "ctrl+6",
    "command": "-extension.CompileRun"
  },
  {
    "key": "alt+t",
    "command": "editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+k ctrl+x",
    "command": "-editor.action.trimTrailingWhitespace",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-interactiveEditor.undoToClipboard",
    "when": "interactiveEditorHasProvider && interactiveEditorVisible && interactiveEditorLastEditKind == 'simple'"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-redo"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+1",
    "command": "workbench.action.focusFirstEditorGroup"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "ctrl+2",
    "command": "-workbench.action.focusSecondEditorGroup"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+z",
    "command": "-editor.action.toggleWordWrap"
  },
  {
    "key": "alt+b",
    "command": "html.showPreviewToSide",
    "when": "editorLangId == 'html'"
  },
  {
    "key": "alt+l",
    "command": "lorem-ipsum.line",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+l",
    "command": "lorem-ipsum.paragraph",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+l",
    "command": "lorem-ipsum.multipleParagraphs",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+w",
    "command": "cursorWordEndRightSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "ctrl+w",
    "command": "cursorWordLeftSelect",
    "when": "textInputFocus && !accessibilityModeEnabled"
  },
  {
    "key": "alt+left",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "shift+alt+left",
    "command": "-editor.action.smartSelect.shrink",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+left",
    "command": "-workbench.action.moveEditorToPreviousGroup"
  },
  {
    "key": "ctrl+alt+numpad0",
    "command": "workbench.action.zoomReset"
  },
  {
    "key": "ctrl+0",
    "command": "-editor.action.fontZoomReset"
  },
  {
    "key": "ctrl+alt+0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "ctrl+numpad_decimal",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "alt+r",
    "command": "extension.printTimestamp",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+g ctrl+g",
    "command": "-extension.jumpToColumn",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+g",
    "command": "extension.jumpToColumn",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+e ctrl+d",
    "command": "-extension.base64Decode",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+e ctrl+e",
    "command": "-extension.base64Encode",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+c",
    "command": "extension.MinifyAll"
  },
  {
    "key": "ctrl+alt+. ctrl+alt+m",
    "command": "-extension.MinifyAllSelectedText"
  },
  {
    "key": "ctrl+alt+,",
    "command": "extension.MinifyAllSelectedText"
  },
  {
    "key": "ctrl+/",
    "command": "-github.copilot.acceptCursorPanelSolution",
    "when": "github.copilot.activated && github.copilot.panelVisible && activeWebviewPanelId == 'GitHub Copilot Suggestions'"
  },
  {
    "key": "shift+alt+/",
    "command": "workbench.action.toggleSidebarVisibility"
  }
]